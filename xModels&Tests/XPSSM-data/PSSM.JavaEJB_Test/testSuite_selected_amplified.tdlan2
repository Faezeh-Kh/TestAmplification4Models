Package testSuite {
	Test Description test6 uses configuration JavaEJBConfiguration {
		tester.reactiveGate sends _run (
			state_machine = JavaEJB
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = home_create_method____occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectExists_Referenced
		) to tester.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = home_remove___occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_Referenced
		) to tester.reactiveGate ;
	}
	Test Description test9 uses configuration JavaEJBConfiguration {
		tester.reactiveGate sends _run (
			state_machine = JavaEJB
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = home_create_method____occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectExists_Referenced
		) to tester.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = containerCrash_occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_Referenced
		) to tester.reactiveGate ;
	}
	Test Description test12 uses configuration JavaEJBConfiguration {
		tester.reactiveGate sends _run (
			state_machine = JavaEJB
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = home_create_method____occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectExists_Referenced
		) to tester.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = systemException_occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_Referenced
		) to tester.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = businessMethod___occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_Referenced
		) to tester.reactiveGate ;
	}
	Test Description test15 uses configuration JavaEJBConfiguration {
		tester.reactiveGate sends _run (
			state_machine = JavaEJB
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = home_create_method____occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectExists_Referenced
		) to tester.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = object_remove___occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_Referenced
		) to tester.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = releaseReference_occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
	}
	Test Description test18 uses configuration JavaEJBConfiguration {
		tester.reactiveGate sends _run (
			state_machine = JavaEJB
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = home_create_method____occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectExists_Referenced
		) to tester.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = beanTimout_occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_Referenced
		) to tester.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = releaseReference_occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
	}
	Type CustomSystem ( statemachine of type StateMachine , signals of type Signal , operations of type Operation ) ;
	Type Signal extends NamedElement ( attributes of type Attribute ) ;
	Type Operation extends NamedElement ( inParameters of type Attribute , outParameters of type Attribute , return of type Attribute ) ;
	Type EventType ( ) with {
		abstract ;
	} ;
	Type SignalEventType extends EventType ( signal of type Signal ) ;
	Type CallEventType extends EventType ( operation of type Operation ) ;
	Type Attribute extends NamedElement ( ) with {
		abstract ;
	} ;
	Type BooleanAttribute extends Attribute ( ) ;
	Type IntegerAttribute extends Attribute ( ) ;
	Type StringAttribute extends Attribute ( ) ;
	Type Constraint ( ) with {
		abstract ;
	} ;
	Type BooleanConstraint extends Constraint ( attribute of type BooleanAttribute , value of type EBooleanObject ) ;
	Type IntegerConstraint extends Constraint ( attribute of type IntegerAttribute , value of type EIntegerObject ) ;
	Type StringConstraint extends Constraint ( attribute of type StringAttribute , value of type EString ) ;
	Type NamedElement ( _name of type EString ) with {
		abstract ;
	} ;
	Type StateMachine extends NamedElement ( regions of type Region ) ;
	Type Region extends NamedElement ( vertice of type Vertex , transitions of type Transition , stateMachine of type StateMachine , state of type State , currentVertex of type Vertex with { dynamic ;
	} ) ;
	Type Vertex extends NamedElement ( container of type Region , outgoingTransitions of type Transition , incomingTransitions of type Transition ) with {
		abstract ;
	} ;
	Type Pseudostate extends Vertex ( kind of type PseudostateKind , state of type State ) ;
	Type State extends Vertex ( regions of type Region , entry of type Behavior , doActivity of type Behavior , exit of type Behavior , deferrableTriggers of type Trigger , connectionPoint of type Pseudostate ) ;
	Type FinalState extends State ( ) ;
	Type Transition extends NamedElement ( source of type Vertex , target of type Vertex , _triggers of type Trigger , container of type Region , kind of type TransitionKind , effect of type Behavior , constraint of type Constraint ) ;
	Type Trigger extends NamedElement ( eventType of type EventType ) ;
	Type Behavior extends NamedElement ( emittedSignals of type SignalEventOccurrence ) ;
	Type OperationBehavior extends Behavior ( attributeValues of type AttributeValue ) ;
	Type AttributeValue ( ) ;
	Type BooleanAttributeValue extends AttributeValue ( attribute of type BooleanAttribute , value of type EBooleanObject ) ;
	Type IntegerAttributeValue extends AttributeValue ( attribute of type IntegerAttribute , value of type EIntegerObject ) ;
	Type StringAttributeValue extends AttributeValue ( attribute of type StringAttribute , value of type EString ) ;
	Type EventOccurrence ( ) with {
		abstract ;
	} ;
	Type CompletionEventOccurrence ( state of type State ) ;
	Type SignalEventOccurrence extends EventOccurrence ( signal of type Signal , attributeValues of type AttributeValue with { dynamic ;
	} ) ;
	Type CallEventOccurrence extends EventOccurrence ( operation of type Operation , inParameterValues of type AttributeValue with { dynamic ;
	} , outParameterValues of type AttributeValue with { dynamic ; } , returnValue of type AttributeValue with { dynamic ; } ) ;
	Type PseudostateKind ;
	Type TransitionKind ;
	Type BooleanBinaryOperator ;
	Type BooleanUnaryOperator ;
	Type IntegerComparisonOperator ;
	Type StringComparisonOperator ;
	BooleanBinaryOperator AND ;
	BooleanBinaryOperator OR ;
	BooleanUnaryOperator NOT ;
	PseudostateKind initial ;
	PseudostateKind join ;
	PseudostateKind fork ;
	PseudostateKind _terminate ;
	PseudostateKind entrypoint ;
	PseudostateKind exitpoint ;
	StringComparisonOperator _EQUALS ;
	TransitionKind internal ;
	TransitionKind local ;
	TransitionKind external ;
	IntegerComparisonOperator SMALLER ;
	IntegerComparisonOperator SMALLER_EQUALS ;
	IntegerComparisonOperator EQUALS ;
	IntegerComparisonOperator GREATER_EQUALS ;
	IntegerComparisonOperator GREATER ;
	IntegerComparisonOperator NOT_EQUALS ;
	Annotation dynamic ;
	Annotation abstract ;
	Type EByteArray ;
	Type EFloat ;
	Type EBoolean ;
	Type EFeatureMapEntry ;
	Type EResource ;
	Type EBooleanObject ;
	Type EFeatureMap ;
	Type EJavaClass ;
	Type EInvocationTargetException ;
	Type EChar ;
	Type ELongObject ;
	Type EInt ;
	Type EShort ;
	Type EJavaObject ;
	Type EBigDecimal ;
	Type EByte ;
	Type EString ;
	Type ETreeIterator ;
	Type EFloatObject ;
	Type EDate ;
	Type EDoubleObject ;
	Type EIntegerObject ;
	Type EBigInteger ;
	Type EByteObject ;
	Type EShortObject ;
	Type EEList ;
	Type ELong ;
	Type EDiagnosticChain ;
	Type EResourceSet ;
	Type EEnumerator ;
	Type ECharacterObject ;
	Type EDouble ;
	Type EMap ;
	Type OCL ( query of type EString ) ;
	OCL oclQuery ( query = ? ) ;
	Type Verdict ;
	Verdict PASS ;
	Verdict FAIL ;
	Verdict INCONCLUSINVE ;
	Type modelExecutionCommand ;
	modelExecutionCommand runModel ;
	modelExecutionCommand runModelAsynchronous ;
	modelExecutionCommand stopModelExecution ;
	modelExecutionCommand resetModel ;
	modelExecutionCommand getModelState ;
	Annotation AcceptedEvent ;
	Annotation ExposedEvent ;
	Type _run ( state_machine of type StateMachine ) with {
		AcceptedEvent ;
	} ;
	_run _run ( state_machine = ? ) ;
	Type signal_received ( state_machine of type StateMachine , signal_occurrence of type SignalEventOccurrence ) with {
		AcceptedEvent ;
	} ;
	signal_received signal_received ( state_machine = ? , signal_occurrence = ? ) ;
	Type callOperation_received ( state_machine of type StateMachine , call_occurrence of type CallEventOccurrence ) with {
		AcceptedEvent ;
	} ;
	callOperation_received callOperation_received ( state_machine = ? , call_occurrence = ? ) ;
	Type behavior_executed ( behavior of type Behavior ) with {
		ExposedEvent ;
	} ;
	behavior_executed behavior_executed ( behavior = ? ) ;
	Gate Type genericGateType accepts modelExecutionCommand ;
	Gate Type reactiveGateType accepts _run , signal_received , callOperation_received , behavior_executed ;
	Gate Type oclGateType accepts OCL ;
	Component Type TestSystem having {
		gate reactiveGate of type reactiveGateType ;
		gate oclGate of type oclGateType ;
	}
	Component Type MUT having {
		gate reactiveGate of type reactiveGateType ;
		gate oclGate of type oclGateType ;
	}
	Annotation MUTPath ;
	Annotation DSLName ;
	Test Configuration JavaEJBConfiguration {
		create Tester tester of type TestSystem ;
		create SUT statemachine of type MUT with { MUTPath : '/PSSM.JavaEJB_Mutants/JavaEJB.model' ; DSLName : 'org.imt.pssm.reactive.ReactivePSSM' ; } ;
		connect tester.reactiveGate to statemachine.reactiveGate ;
	}
	StateMachine JavaEJB ( _name = "JavaEJB" ) ;
	Behavior ObjectNotExisted_NotReferenced ( _name = "ObjectNotExisted&NotReferenced" ) ;
	Behavior ObjectExists_Referenced ( _name = "ObjectExists&Referenced" ) ;
	Behavior ObjectNotExisted_Referenced ( _name = "ObjectNotExisted&Referenced" ) ;
	Behavior ObjectExists_NotReferenced ( _name = "ObjectExists&NotReferenced" ) ;
	Signal home_create_method___ ( _name = "home.create<method>()" ) ;
	SignalEventOccurrence home_create_method____occurrence ( signal = home_create_method___ ) ;
	Signal businessMethod__ ( _name = "businessMethod()" ) ;
	SignalEventOccurrence businessMethod___occurrence ( signal = businessMethod__ ) ;
	Signal object_remove__ ( _name = "object.remove()" ) ;
	SignalEventOccurrence object_remove___occurrence ( signal = object_remove__ ) ;
	Signal home_remove__ ( _name = "home.remove()" ) ;
	SignalEventOccurrence home_remove___occurrence ( signal = home_remove__ ) ;
	Signal systemException ( _name = "systemException" ) ;
	SignalEventOccurrence systemException_occurrence ( signal = systemException ) ;
	Signal beanTimout ( _name = "beanTimout" ) ;
	SignalEventOccurrence beanTimout_occurrence ( signal = beanTimout ) ;
	Signal containerCrash ( _name = "containerCrash" ) ;
	SignalEventOccurrence containerCrash_occurrence ( signal = containerCrash ) ;
	Signal releaseReference ( _name = "releaseReference" ) ;
	SignalEventOccurrence releaseReference_occurrence ( signal = releaseReference ) ;
	Signal handle_getEJBObject__ ( _name = "handle.getEJBObject()" ) ;
	SignalEventOccurrence handle_getEJBObject___occurrence ( signal = handle_getEJBObject__ ) ;
	Test Description test9_2_EventDuplication uses configuration JavaEJBConfiguration {
		tester.reactiveGate sends _run (
			state_machine = JavaEJB
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = home_create_method____occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = containerCrash_occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = containerCrash_occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectExists_Referenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_Referenced
		) to tester.reactiveGate ;
	}
	Test Description test12_2_EventDuplication uses configuration JavaEJBConfiguration {
		tester.reactiveGate sends _run (
			state_machine = JavaEJB
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = home_create_method____occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = systemException_occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = businessMethod___occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = systemException_occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectExists_Referenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_Referenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_Referenced
		) to tester.reactiveGate ;
	}
	Test Description test15_1_EventDuplication uses configuration JavaEJBConfiguration {
		tester.reactiveGate sends _run (
			state_machine = JavaEJB
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = home_create_method____occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = object_remove___occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = releaseReference_occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = home_create_method____occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectExists_Referenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_Referenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectExists_Referenced
		) to tester.reactiveGate ;
	}
	Test Description test15_3_EventDuplication uses configuration JavaEJBConfiguration {
		tester.reactiveGate sends _run (
			state_machine = JavaEJB
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = home_create_method____occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = object_remove___occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = releaseReference_occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = releaseReference_occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectExists_Referenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_Referenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
	}
	Test Description test18_2_EventDuplication uses configuration JavaEJBConfiguration {
		tester.reactiveGate sends _run (
			state_machine = JavaEJB
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = home_create_method____occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = beanTimout_occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = releaseReference_occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = beanTimout_occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectExists_Referenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_Referenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
	}
	Test Description test15_1_EventDuplication_3_EventDuplication uses configuration JavaEJBConfiguration {
		tester.reactiveGate sends _run (
			state_machine = JavaEJB
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = home_create_method____occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = object_remove___occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = releaseReference_occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = home_create_method____occurrence
		) to statemachine.reactiveGate ;
		tester.reactiveGate sends signal_received (
			state_machine = JavaEJB ,
			signal_occurrence = releaseReference_occurrence
		) to statemachine.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectExists_Referenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_Referenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectNotExisted_NotReferenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectExists_Referenced
		) to tester.reactiveGate ;
		statemachine.reactiveGate sends behavior_executed (
			behavior = ObjectExists_NotReferenced
		) to tester.reactiveGate ;
	}
}